[gd_scene load_steps=7 format=3 uid="uid://bi3y5eiy7itfx"]

[ext_resource type="Texture2D" uid="uid://ul0cyj1oba8v" path="res://sprites/Grassland Tiles/Assets/Background_2.png" id="1_uwih0"]
[ext_resource type="PackedScene" uid="uid://n61uuyebj800" path="res://scenes/player.tscn" id="1_wtbkp"]
[ext_resource type="PackedScene" uid="uid://dxwoakctr0kgn" path="res://scenes/moving_sky.tscn" id="2_ysi2y"]
[ext_resource type="PackedScene" uid="uid://cacgmkrliqyjt" path="res://scenes/pipes.tscn" id="3_uc2nl"]
[ext_resource type="PackedScene" uid="uid://krqqoouysslo" path="res://scenes/ground.tscn" id="4_nmnkw"]

[sub_resource type="GDScript" id="GDScript_k0xxw"]
script/source = "extends Node2D

@export var pipe_scene = preload(\"res://scenes/pipes.tscn\")

var game_running : bool
var game_end : bool 
var scrolling : bool
var score
var scroll
var scrollsky
var ground_height : int
const SCROLL_SPEED : int = 3
const SCROLL_SPEED_SKY : int = 1
var pipes : Array
var screen_size : Vector2i

func _ready():
	screen_size = get_window().size
	game_start()

func game_start():
	game_running = true
	game_end = false
	scrolling = true
	$Player.flying = true
	$Player.flap()
	scroll = 0
	scrollsky = 0
	score = 0
	$PipeTimer.start()
	
func _input(event):
	if game_running == true:
		if event.is_action_pressed(\"jump\"):
			if $Player.flying:
				$Player.flap()
				$Player.flapkirbyflap()
				

func _process(delta):
	if scrolling:
		scroll += SCROLL_SPEED
		scrollsky += SCROLL_SPEED_SKY
	else:
		scroll = 0
		scrollsky = 0
	if game_running:
		#reset scroll
		if scroll >= screen_size.x:
			scroll = 0
		#move ground node
		$Ground.position.x = -scroll
		#moving for the sky
		if scrollsky >= 2624:
			scrollsky = 0
			
		$MovingSky.position.x = -scrollsky
		#move pipes
		for pipe in pipes:
			pipe.position.x -= SCROLL_SPEED
			#remove pipes after leaving the screen
			if pipe.position.x < -250:
				pipes.remove_at(0)
				remove_child(pipe)
		
		
			
	else:
		$Player.reset()
		scrolling = false

func add_pipes():
	var new_pipe = pipe_scene.instantiate()
	add_child(new_pipe)
	pipes.append(new_pipe)
	new_pipe.position.x = screen_size.x
	new_pipe.position.y = randi_range(400, 1200)
	new_pipe.pipehit.connect(hit)
	$PipeTimer.start() 
	
func end_game():
	game_running = false
	$PipeTimer.stop()

func _on_pipe_timer_timeout():
	add_pipes()

func hit():
	print(\"bonk.\")
	end_game()

func _on_ground_groundhit():
	end_game()
"

[node name="Game" type="Node2D"]
script = SubResource("GDScript_k0xxw")

[node name="Sky" type="Sprite2D" parent="."]
position = Vector2(904, 688)
scale = Vector2(5.73235, 5.21881)
texture = ExtResource("1_uwih0")

[node name="MovingSky" parent="." instance=ExtResource("2_ysi2y")]
position = Vector2(0, -16)
scale = Vector2(5.29036, 5.29036)

[node name="Player" parent="." instance=ExtResource("1_wtbkp")]
position = Vector2(-109, 480)
scale = Vector2(0.892288, 0.892288)

[node name="Ground" parent="." instance=ExtResource("4_nmnkw")]
position = Vector2(2.11758e-22, 1256)
scale = Vector2(2.97493, 2.97493)

[node name="PipeTimer" type="Timer" parent="."]
wait_time = 3.0

[node name="Pipes" parent="." instance=ExtResource("3_uc2nl")]
visible = false
position = Vector2(1168, 712)

[connection signal="groundhit" from="Ground" to="." method="_on_ground_groundhit"]
[connection signal="timeout" from="PipeTimer" to="." method="_on_pipe_timer_timeout"]
[connection signal="pipehit" from="Pipes" to="." method="_on_pipes_pipehit"]
